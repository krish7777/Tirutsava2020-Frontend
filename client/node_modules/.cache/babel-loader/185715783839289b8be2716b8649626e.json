{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\krish\\\\Downloads\\\\tirutsava2020-20200108T112425Z-001\\\\tirutsava2020\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\krish\\\\Downloads\\\\tirutsava2020-20200108T112425Z-001\\\\tirutsava2020\\\\client\\\\src\\\\components\\\\faqs\\\\main.js\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport FAQ from \"./FAQ\";\nimport \"./index.css\";\nimport { MDBContainer, MDBJumbotron } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./searchbar/search\";\n\nconst App = () => {\n  const _useState = useState([{\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }, {\n    question: \"How many programmers does it take to make a website?\",\n    answer: \"Dont't Know.\",\n    open: false\n  }, {\n    question: \"Who is most awesome person?\",\n    answer: \"You. \",\n    open: false\n  }, {\n    question: \"How many questions does it take to make a successful FAQ Page?\",\n    answer: \"This many.\",\n    open: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        faqs = _useState2[0],\n        setfaqs = _useState2[1];\n\n  const _useState3 = useState(faqs),\n        _useState4 = _slicedToArray(_useState3, 1),\n        showfaqs = _useState4[0];\n\n  const toggleFAQ = index => {\n    setfaqs(faqs.map((faq, i) => {\n      if (i === index) {\n        faq.open = !faq.open;\n      } else {\n        faq.open = false;\n      }\n\n      return faq;\n    }));\n  };\n\n  const handleChange = e => {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      // Assign the original list to currentList\n      currentList = showfaqs; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.question.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = showfaqs;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    setfaqs(newList);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bcgrnd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"inline\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(Search, {\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"scroll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"faqs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, faqs.map((faq, i) => React.createElement(FAQ, {\n    faq: faq,\n    index: i,\n    key: i,\n    toggleFAQ: toggleFAQ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))))), React.createElement(MDBJumbotron, {\n    className: \"bg-light mt-5 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    className: \" bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"display-4 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Couldn't Find Your Doubt?\"), React.createElement(\"h6\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"No Worries just send your doubt\", React.createElement(Link, {\n    className: \"text-white\",\n    to: \"/query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \" \", React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \" \", React.createElement(\"button\", {\n    className: \"btn-hover color-7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"HERE\")))), React.createElement(\"h6\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-laugh-beam\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), \" We wiil soon contact You\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/krish/Downloads/tirutsava2020-20200108T112425Z-001/tirutsava2020/client/src/components/faqs/main.js"],"names":["React","useState","Header","FAQ","MDBContainer","MDBJumbotron","Link","Search","App","question","answer","open","faqs","setfaqs","showfaqs","toggleFAQ","index","map","faq","i","handleChange","e","currentList","newList","target","value","filter","item","lc","toLowerCase","includes","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport FAQ from \"./FAQ\";\nimport \"./index.css\";\nimport { MDBContainer, MDBJumbotron } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport Search from \"./searchbar/search\";\n\n\nconst App = () => {\n  const [faqs, setfaqs] = useState([\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    },\n    {\n      question: \"How many programmers does it take to make a website?\",\n      answer: \"Dont't Know.\",\n      open: false\n    },\n    {\n      question: \"Who is most awesome person?\",\n      answer: \"You. \",\n      open: false\n    },\n    {\n      question:\n        \"How many questions does it take to make a successful FAQ Page?\",\n      answer: \"This many.\",\n      open: false\n    }\n  ]);\n  const [showfaqs] = useState(faqs);\n\n  const toggleFAQ = index => {\n    setfaqs(\n      faqs.map((faq, i) => {\n        if (i === index) {\n          faq.open = !faq.open;\n        } else {\n          faq.open = false;\n        }\n\n        return faq;\n      })\n    );\n  };\n  const handleChange = e => {\n    // Variable to hold the original version of the list\n    let currentList = [];\n    // Variable to hold the filtered list before putting into state\n    let newList = [];\n\n    // If the search bar isn't empty\n    if (e.target.value !== \"\") {\n      // Assign the original list to currentList\n      currentList = showfaqs;\n\n      // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.question.toLowerCase();\n        // change search term to lowercase\n        const filter = e.target.value.toLowerCase();\n        // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = showfaqs;\n    }\n    // Set the filtered state based on what our rules added to newList\n\n    setfaqs(newList);\n  };\n  return (\n    <div>\n      <div className=\"bcgrnd\">\n        <div className=\"App\" style={{ display: \"inline\" }}>\n          <Header />\n          <Search handleChange={handleChange} />\n          <div className=\"scroll\">\n            <div className=\"faqs\">\n              {faqs.map((faq, i) => (\n                <FAQ faq={faq} index={i} key={i} toggleFAQ={toggleFAQ} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <MDBJumbotron className=\"bg-light mt-5 mb-0\">\n          <MDBContainer className=\" bg-light\">\n            <h2 className=\"display-4 text-center\">Couldn't Find Your Doubt?</h2>\n            <h6 className=\"text-center\">\n              No Worries just send your doubt\n              <Link className=\"text-white\" to=\"/query\">\n                {\" \"}\n                <div className=\"buttons\">\n                  {\" \"}\n                  <button className=\"btn-hover color-7\">HERE</button>\n                </div>\n              </Link>\n            </h6>\n            <h6 className=\"text-center\">\n              <i className=\"fas fa-laugh-beam\" /> We wiil soon contact You\n            </h6>\n          </MDBContainer>\n        </MDBJumbotron>\n        {/* <Link to=\"/query\">Submit Yor Question here</Link> */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}